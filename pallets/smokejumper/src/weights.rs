
//! Autogenerated weights for `pallet_smokejumper`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2024-12-16, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `penguin`, CPU: `Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/solochain-template-node
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_smokejumper
// --extrinsic=*
// --steps
// 50
// --repeat
// 20
// --template
// ./scripts/frame-weight-template.hbs
// --output
// pallets/smokejumper/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_smokejumper`.
pub trait WeightInfo {
	fn create_smj() -> Weight;
	fn change_name() -> Weight;
	fn swap_address() -> Weight;
}

/// Weights for `pallet_smokejumper` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Smokejumper::Smokejumpers` (r:1 w:1)
	/// Proof: `Smokejumper::Smokejumpers` (`max_values`: None, `max_size`: Some(119), added: 2594, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn create_smj() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `3593`
		// Minimum execution time: 59_523_000 picoseconds.
		Weight::from_parts(62_190_000, 3593)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Smokejumper::Smokejumpers` (r:1 w:1)
	/// Proof: `Smokejumper::Smokejumpers` (`max_values`: None, `max_size`: Some(119), added: 2594, mode: `MaxEncodedLen`)
	fn change_name() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `189`
		//  Estimated: `3584`
		// Minimum execution time: 25_215_000 picoseconds.
		Weight::from_parts(25_757_000, 3584)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Smokejumper::Smokejumpers` (r:2 w:2)
	/// Proof: `Smokejumper::Smokejumpers` (`max_values`: None, `max_size`: Some(119), added: 2594, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn swap_address() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `6196`
		// Minimum execution time: 110_539_000 picoseconds.
		Weight::from_parts(112_448_000, 6196)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Smokejumper::Smokejumpers` (r:1 w:1)
	/// Proof: `Smokejumper::Smokejumpers` (`max_values`: None, `max_size`: Some(119), added: 2594, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn create_smj() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `3593`
		// Minimum execution time: 59_523_000 picoseconds.
		Weight::from_parts(62_190_000, 3593)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Smokejumper::Smokejumpers` (r:1 w:1)
	/// Proof: `Smokejumper::Smokejumpers` (`max_values`: None, `max_size`: Some(119), added: 2594, mode: `MaxEncodedLen`)
	fn change_name() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `189`
		//  Estimated: `3584`
		// Minimum execution time: 25_215_000 picoseconds.
		Weight::from_parts(25_757_000, 3584)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Smokejumper::Smokejumpers` (r:2 w:2)
	/// Proof: `Smokejumper::Smokejumpers` (`max_values`: None, `max_size`: Some(119), added: 2594, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn swap_address() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `6196`
		// Minimum execution time: 110_539_000 picoseconds.
		Weight::from_parts(112_448_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
}
